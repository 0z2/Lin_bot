import requests
from data.config import api_link
from typing import Optional, Union
from aiogram import Bot, types
import logging

import schedule
import time


import asyncio

from collections import Counter
from work_with_gsheet import get_achievements_group_by_user_for_period, get_list_id_and_name_of_users

def run_async(loop: Optional[Union[asyncio.BaseEventLoop, asyncio.AbstractEventLoop]], coro):
    return loop.run_until_complete(coro)

list_of_achievements = {'delicious_house': 'üë©‚Äç‚ù§Ô∏è‚Äçüë®üè° –ó–∞ –≤–∫—É—Å–Ω—ã–π –¥–æ–º',
                        'health': 'üíä –ó–∞ –∑–∞–Ω—è—Ç–∏–µ –∑–¥–æ—Ä–æ–≤—å–µ–º',
                        'language': 'üá∫üá∏ –ó–∞ –∏–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤',
                        'music': 'üé∏ –ó–∞ –∑–∞–Ω—è—Ç–∏–µ –º—É–∑—ã–∫–æ–π',
                        'personal_care': 'üíÜ‚Äç‚ôÄüíá‚Äç‚ôÇ –ó–∞ —É—Ö–æ–¥ –∑–∞ —Å–æ–±–æ–π',
                        'proper_nutrition': 'ü•ô –ó–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ',
                        'sport': 'üèãüèª‚Äç‚ôÄÔ∏èüèãüèª –ó–∞ –∑–∞–Ω—è—Ç–∏—è —Å–ø–æ—Ä—Ç–æ–º',
                        'studying': 'üéì –ó–∞ —É—á—ë–±—É',
                        'work': 'üõ† –ó–∞ —Ö–æ—Ä–æ—à—É—é —Ä–∞–±–æ—Ç—É',
                        'yoga': 'üßò‚Äç‚ôÇÔ∏è–ó–∞ –∑–∞–Ω—è—Ç–∏—è –π–æ–≥–æ–π',
                        'voice': 'üó£Ô∏è –∑–∞ —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –≥–æ–ª–æ—Å–æ–º',
                        'meditation': 'üí´Ô∏èÔ∏è –∑–∞ –º–µ–¥–∏—Ç–∞—Ü–∏—é',
                        'reading': 'üìñ –∑–∞ —á—Ç–µ–Ω–∏–µ',
                        }

# —Ç—É—Ç –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–∏–¥–∞—Ç—å –ª–∏–±–æ –∑–∞ –Ω–µ–¥–µ–ª—é, –ª–∏–±–æ –∑–∞ –º–µ—Å—è—Ü –∏ –¥–æ–±–∞–≤–∏—Ç—å –¥–≤–∞ –≤—ã–∑–æ–≤–∞, —á—Ç–æ –±—ã –æ–¥–Ω–æ–º —Å–ª—É—á–∞–µ
# –ø–∏—Å–∞–ª–æ—Å—å –∑–∞ –Ω–µ–¥–µ–ª—é, –∞ –≤–æ –≤—Ç–æ—Ä–æ–º –∑–∞ –º–µ—Å—è—Ü
# –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞—á—É –∫–æ–ª-–≤–∞ –¥–Ω–µ–π, —á—Ç–æ–±—ã –¥–∞–ª–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –º–æ–≥ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å. –•–æ—Ç—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å
# –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π
def job(bot: Bot):
    try:
        list_of_users = run_async(bot.loop, get_list_id_and_name_of_users())
        for user in list_of_users:
            amount_of_achievements_of_users_for_the_week_list = run_async(bot.loop, get_achievements_group_by_user_for_period())
            amount_of_achievements_of_user_for_the_week = amount_of_achievements_of_users_for_the_week_list[user[1]]
            amount_of_achievements_of_user_for_the_week_count = Counter(amount_of_achievements_of_user_for_the_week)
            # print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', user[1])
            message = '–ü—Ä–∏–≤–µ—Ç, –≤–æ—Ç —Ç–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞ –Ω–µ–¥–µ–ª—é!\n\n'
            for name_of_achievement, amount_of_achievement in amount_of_achievements_of_user_for_the_week_count.items():
                message += (list_of_achievements[name_of_achievement] + ' - ' + str(amount_of_achievement) + '\n')
            # print(message)
            notifying = requests.get(api_link + f'/sendMessage?chat_id={user[0]}&text={message}')
            break  # –¥–ª—è —Ç–µ—Å—Ç–∞, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –º–Ω–µ
    except Exception as err:
        logging.exception(err)

bot = Bot(token="1267986653:AAEIxXafABfUFDDapLsEyjvNkeQ-6126q8Y", parse_mode=types.ParseMode.HTML)

# schedule.every(0.1).minutes.do(job, bot=bot)
# schedule.every().hour.do(job, bot=bot)
# schedule.every().day.at("23:37").do(job, bot=bot)
# schedule.every().monday.do(job), bot=bot
schedule.every().sunday.at("21:00").do(job, bot=bot)
# schedule.every().minute.at(":17").do(job, bot=bot)

while True:
    schedule.run_pending()
    time.sleep(1)
